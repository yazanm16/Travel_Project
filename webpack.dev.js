
const path = require("path"); // Module for working with file and directory paths
const webpack = require("webpack"); // Webpack core module
const HtmlWebPackPlugin = require("html-webpack-plugin"); // Plugin to generate HTML files
const { CleanWebpackPlugin } = require("clean-webpack-plugin"); // Plugin to clean up the output directory

module.exports = {
  // Entry point for the application
  entry: "./src/client/index.js",

  // Mode of the build process
  mode: "development", // Use "production" for optimized builds; "development" for debugging

  // Source map configuration for debugging
  devtool: "source-map", // Generate a source map for debugging
  stats: "verbose", // Verbose output during the build process

  // Output configuration
  output: {
    libraryTarget: "var", // Define the output format of the library
    library: "Client", // Name of the global variable representing the library
  },

  // Module rules for processing different types of files
  module: {
    rules: [
      {
        test: /\.js$/, // RegExp to match JavaScript files
        exclude: /node_modules/, // Exclude node_modules directory
        loader: "babel-loader", // Loader to transpile JavaScript files using Babel
      },
      {
        test: /\.scss$/, // RegExp to match SCSS files
        use: ["style-loader", "css-loader", "sass-loader"], // Loaders to handle SCSS files
      },
    ],
  },

  // Source map configuration for development
  devtool: "inline-source-map", // Embed source map directly in the bundle for easier debugging

  // Development server configuration
  devServer: {
    static: './dist', // Directory to serve static files from
    hot: true, // Enable hot module replacement for faster development
  },

  // Plugins to extend Webpack's functionality
  plugins: [
    new HtmlWebPackPlugin({
      template: "./src/client/views/index.html", // Template HTML file
      filename: "./index.html", // Output HTML file name
    }),

    new CleanWebpackPlugin({
      // Simulate the removal of files (useful for testing)
      dry: true,
      // Write logs to console
      verbose: true,
      // Automatically remove all unused webpack assets on rebuild
      cleanStaleWebpackAssets: true,
      // Allow removal of assets generated by Webpack
      protectWebpackAssets: false,
    }),
  ],
};
